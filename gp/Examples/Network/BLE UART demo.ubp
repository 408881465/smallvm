module main
author unknown
version 1 0 
description ''

script 56 131 {
whenStarted
forever {
  event = ('last BLE UART message')
  if (event != (booleanConstant false)) {
    valid_event = event
    sendBroadcast 'process event'
  }
}
}

script 360 135 {
whenStarted
'start BLE UART server' 'MicroBlocks BLE UART server'
}

script 52 380 {
whenBroadcastReceived 'process event'
sayIt valid_event
comment 'echo'
'BLE UART write' valid_event
}


module 'BLE UART server' Comm
author wwj718
version 1 0 
description 'BLE UART server.'
variables event valid_event 

	spec ' ' 'start BLE UART server' 'start BLE UART server _' 'auto' 'MicroBlocks BLE UART server'
	spec 'r' 'BLE Device connected' 'BLE Device connected'
	spec 'r' 'last BLE UART message' 'last BLE UART message'
	spec ' ' 'BLE UART write' 'BLE UART write _' 'auto' 'hello'
	spec ' ' '_start advertising and reconnect loop' '_start advertising and reconnect loop'

to 'BLE Device connected' {
  return (callCustomReporter '[net:BLE_DeviceConnected]')
}

to 'BLE UART write' message {
  callCustomCommand '[net:BLE_UART_Write]' ('[data:makeList]' message)
}

to '_start advertising and reconnect loop' {
  callCustomCommand '[net:StartAdvertisingAndReconnectLoop]'
}

to 'last BLE UART message' {
  local 'tmp' (callCustomReporter '[net:BLE_UART_LastEvent]')
  if (tmp != (booleanConstant false)) {
    return (at 1 tmp)
  } else {
    return (booleanConstant false)
  }
}

to 'start BLE UART server' name {
  comment 'Blocked'
  callCustomCommand '[net:BLE_UART_ServerStart]' ('[data:makeList]' name)
  forever {
    '_start advertising and reconnect loop'
    if ('BLE Device connected') {
      sayIt 'Client is connected'
    } else {
      sayIt 'Waiting a client connection...'
    }
  }
}

