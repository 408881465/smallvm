module main
author unknown
version 2 0 
description ''
variables 'player x' 'player y' playing 'stone x' 'stone y' 

script 417 49 {
whenStarted
'player x' = 3
'player y' = 5
forever {
  if playing {
    if (and (buttonA) ((v 'player x') > 1)) {'player x' += -1}
    if (and (buttonB) ((v 'player x') < 5)) {'player x' += 1}
    '[display:mbDisplayOff]'
    '[display:mbPlot]' (v 'stone x') (v 'stone y')
    '[display:mbPlot]' (v 'player x') (v 'player y')
    waitMillis 100
  }
}
}

script 48 65 {
comment 'Game written by David Sánchez Marín
============================

Use the two buttons in the micro:bit to
try to avoid the falling stones.

Have fun!'
}

script 51 218 {
whenStarted
playing = (booleanConstant true)
'stone x' = (random 1 5)
'stone y' = 0
forever {
  if playing {
    repeatUntil ((v 'stone y') == 5) {
      'stone y' += 1
      waitMillis 200
    }
    'stone x' = (random 1 5)
    'stone y' = 0
  }
}
}

script 56 586 {
whenCondition (and ((v 'player x') == (v 'stone x')) ((v 'player y') == (v 'stone y')))
playing = (booleanConstant false)
scroll_text 'GAME OVER'
'[display:mbDisplayOff]'
waitMillis 1000
playing = (booleanConstant true)
}


module 'LED Display' Output
author MicroBlocks
version 1 4 
tags pixel matrix led tft 
description 'Display primitives for the 5x5 LED display on the BBC micro:bit, Calliope mini and M5Atom Matrix. Boards with TFT displays (such as the Citilab ED1 or the M5Stack family) support these primitives with a simulated "fat pixel" display.'
variables _stop_scrolling_text 

  spec ' ' '[display:mbDisplay]' 'display _' 'microbitDisplay' 15237440
  spec ' ' '[display:mbDisplayOff]' 'clear display'
  spec ' ' '[display:mbPlot]' 'plot x _ y _' 'num num' 3 3
  spec ' ' '[display:mbUnplot]' 'unplot x _ y _' 'num num' 3 3
  spec ' ' 'displayCharacter' 'display character _' 'str' 'A'
  spec ' ' 'scroll_text' 'scroll text _ : pausing _ ms' 'str num' 'HELLO ROSA!' 100
  spec ' ' 'stopScrollingText' 'stop scrolling'

to displayCharacter s {
  s = ('[data:join]' '' s)
  if ((size s) == 0) {
    '[display:mbDisplayOff]'
    return 0
  }
  '[display:mbDrawShape]' ('[display:mbShapeForLetter]' (at 1 s))
}

to scroll_text text optionalDelay {
  text = ('[data:join]' text '')
  delay = 100
  if ((pushArgCount) > 1) {
    delay = optionalDelay
  }
  _stop_scrolling_text = (booleanConstant false)
  local 'length' (size text)
  for position ((length * 6) + 6) {
    if _stop_scrolling_text {return 0}
    for i length {
      '[display:mbDrawShape]' ('[display:mbShapeForLetter]' ('[data:unicodeAt]' i text)) (((i * 6) + 2) - position) 1
    }
    waitMillis delay
  }
}

to stopScrollingText {
  _stop_scrolling_text = (booleanConstant true)
  waitMillis 10
  '[display:mbDisplayOff]'
}

