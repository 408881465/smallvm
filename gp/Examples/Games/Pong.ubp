module main
variables _digit_shapes _digit_shapes_start_index 'delta x' 'delta y' 'paddle x' playing 'refresh rate' score x y

	spec ' ' '_covert_to_shapes' '_covert_to_shapes _' 'num any any any' 42

	spec ' ' '_scroll_digit_shapes' '_scroll_digit_shapes _' 'num any any any' 100

	spec ' ' 'bonce on x' 'bonce on x'

	spec ' ' 'bounce ball' 'bounce ball'

	spec ' ' 'bounce on y' 'bounce on y'

	spec ' ' 'game over' 'game over'

	spec ' ' 'new game' 'new game'

	spec ' ' 'plot ball' 'plot ball'

	spec ' ' 'plot paddles' 'plot paddle'

	spec ' ' 'scroll_number' 'scroll number _ pausing _ ms' 'num num' 123 100

	spec ' ' 'scroll_text' 'scroll text _ pausing _ ms' 'str num' 'HELLO ROSA!' 100

	spec ' ' 'should bounce on paddle' 'random bounce'

	spec ' ' 'speed up' 'speed up'


to '_covert_to_shapes' n {
  if (_digit_shapes == 0) {_digit_shapes = (newArray 12)}
  fillArray _digit_shapes ('[display:mbShapeForLetter]' ' ')
  local 'index' (size _digit_shapes)
  local 'isNegative' (booleanConstant false)
  if (n < 0) {
    isNegative = (booleanConstant true)
    n = (0 - n)
  } (n == 0) {
    atPut index _digit_shapes ('[display:mbShapeForLetter]' '0')
    _digit_shapes_start_index = index
  }
  repeatUntil (n == 0) {
    local 'digit' (n % 10)
    atPut index _digit_shapes ('[display:mbShapeForLetter]' (48 + digit))
    index += -1
    n = (n / 10)
  }
  if isNegative {
    atPut index _digit_shapes ('[display:mbShapeForLetter]' '-')
    index += -1
  }
  _digit_shapes_start_index = index
}

to '_scroll_digit_shapes' delay {
  local 'prevShape' ('[display:mbShapeForLetter]' ' ')
  local 'i' _digit_shapes_start_index
  local 'end' ((size _digit_shapes) + 1)
  repeatUntil (i > end) {
    local 'shape' ('[display:mbShapeForLetter]' ' ')
    if (i < end) {
      shape = (at i _digit_shapes)
    }
    for j 5 {
      local 'x' (1 - j)
      '[display:mbDrawShape]' shape (x + 5) 1
      '[display:mbDrawShape]' prevShape x 1
      waitMillis delay
    }
    prevShape = shape
    i += 1
  }
}

to 'bonce on x' {
  'delta x' = ((v 'delta x') * -1)
}

to 'bounce ball' {
  if (or (x == 5) (x == 1)) {'bonce on x'}
  if (y == 1) {
    'bounce on y'
    'speed up'
  }
  if (and (y == 5) (x == (v 'paddle x'))) {
    'bounce on y'
    'should bounce on paddle'
    score += 1
  } (y == 5) {
    'game over'
  }
  x += (v 'delta x')
  y += (v 'delta y')
}

to 'bounce on y' {
  'delta y' = ((v 'delta y') * -1)
}

to 'game over' {
  playing = (booleanConstant false)
  scroll_text 'GAME OVER' 75
  scroll_text 'score:' 75
  scroll_number score 100
  waitMillis 150
  'new game'
}

to 'new game' {
  score = 0
  'paddle x' = 3
  'refresh rate' = 500
  x = (random 2 4)
  y = 2
  'delta y' = 1
  if ((random 1 2) == 1) {
    'delta x' = 1
  } else {
    'delta x' = -1
  }
  scroll_text 'Go!' 100
  '[display:mbDisplayOff]'
  playing = (booleanConstant true)
}

to 'plot ball' {
  '[display:mbPlot]' x y
}

to 'plot paddles' {
  '[display:mbPlot]' (v 'paddle x') 5
}

to scroll_number n delay {
  '_covert_to_shapes' n
  '_scroll_digit_shapes' delay
}

to scroll_text text delay {
  local 'length' (size text)
  for position ((length * 6) + 5) {
    '[display:mbDisplayOff]'
    for i length {
      '[display:mbDrawShape]' ('[display:mbShapeForLetter]' (at i text)) (((i * 6) + 2) - position) 1
    }
    waitMillis delay
  }
}

to 'should bounce on paddle' {
  if (and (and (x > 1) (x < 5)) ((random 1 2) == 1)) {'bonce on x'}
  x = (random 2 4)
}

to 'speed up' {
  if ((v 'refresh rate') > 200) {'refresh rate' += -15}
}

script 1033 50 {
to 'bounce ball' {}
}

script 691 58 {
to 'plot paddles' {}
}

script 56 68 {
whenStarted
'new game'
forever {
  if playing {
    '[display:mbDisplayOff]'
    'plot paddles'
    'plot ball'
    'bounce ball'
  }
  waitMillis (v 'refresh rate')
}
}

script 255 70 {
comment 'A rendition to one of the first videogames ever.
It may have worse resolution than the original,
but this one fits in your pocket!'
}

script 405 153 {
to 'new game' {}
}

script 692 162 {
to 'plot ball' {}
}

script 694 257 {
to 'bonce on x' {}
}

script 695 360 {
to 'bounce on y' {}
}

script 50 381 {
to 'game over' {}
}

script 693 489 {
to 'should bounce on paddle' {}
}

script 1038 620 {
to 'speed up' {}
}

script 407 628 {
whenCondition (buttonB)
if ((v 'paddle x') < 5) {
  'paddle x' += 1
}
waitUntil (not (buttonB))
}

script 96 629 {
whenCondition (buttonA)
if ((v 'paddle x') > 1) {
  'paddle x' += -1
}
waitUntil (not (buttonA))
}

