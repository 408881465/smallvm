#!/bin/bash

# DMG Creation Script
# Usage: makedmg <imagename> <imagetitle> <imagesize (MB)> <contentdir>
#
# imagename: The output file name of the image, ie foo.dmg
# imagetitle: The title of the DMG File as displayed in OS X
# imagesize: The size of the DMG you're creating in MB (Blame Linux for the fixed size limitation!!)
# contentdir: The directory containing the content you want the DMG file to contain
#
# Example: makedmg foo.dmg "Script Test" 50 /home/jon/work/scripts/content
#
# Author: Jon Cowie
# Creation Date: 02/04/2008
#
# Modified by Bernat Romagosa on 18/06/2018

if [ ! $# == 4 ]; then
    echo "Usage: makedmg <imagename> <imagetitle> <imagesize (MB)> <contentdir>"
else
    OUTPUT=$1
    TITLE=$2
    FILESIZE=$3
    CONTENTDIR=$4
    CONTENTDIRNAME=`echo $CONTENTDIR | sed "s:/.*/::g"`
    USER=`whoami`
    TMPDIR="/tmp/dmgdir"

    if [ ${USER} != "root" ]; then
        echo "makedmg must be run as root!"
    else
        echo "Creating DMG File..."
        dd if=/dev/zero of=${OUTPUT} bs=1M count=$FILESIZE
        mkfs.hfsplus -v "${TITLE}" ${OUTPUT}

        echo "Mounting DMG File..."
        mkdir -p ${TMPDIR}
        mount -t hfsplus -o loop ${OUTPUT} ${TMPDIR}

        echo "Copying content to DMG File..."
        cp -R ${CONTENTDIR} ${TMPDIR}
        ln -s /Applications ${TMPDIR}/Applications

        echo "Adding icon..."
        cp Icon ${TMPDIR}/${CONTENTDIRNAME}

        echo "Adding .DS_Store..."
        cp .DS_Store ${TMPDIR}

        echo "Adding .fseventsd..."
        cp -r .fseventsd ${TMPDIR}

        echo "Unmounting DMG File..."
        umount ${TMPDIR}
        rm -rf ${TMPDIR}

        echo "All Done!"
    fi
fi
