module WAV output
author 'José García Yeste'
version 1 2 
description 'Play WAV sound files. Requires a board with a DAC.

Files can be uploaded to the board using a variety of tools, including esptool, the Arduino IDE or PlatformIO. Search the web for "SPIFFS file upload" for details.

If you want to stay 100% inside MicroBlocks, you can even set up a web server in MicroBlocks itself and, for example, send the file to the board with a multipart POST request.

Note: This library cannot play compressed or stereo files 
'

	spec 'r' '_readChunkID' '_readChunkID _' 'auto' ''
	spec 'r' '_readChunkSize' '_readChunkSize _' 'auto' ''
	spec ' ' '_playSoundBuffer' '_playSoundBuffer _' 'auto' ''
	spec ' ' '_playSoundBuffer16' '_playSoundBuffer16 _' 'auto' ''
	spec ' ' 'playWAVFile' 'play WAV file _' 'auto' ''

to '_playSoundBuffer' buffer {
  local 'i' 1
  repeatUntil (i > (size buffer)) {
    i += ('[io:dacWrite]' buffer i)
  }
}

to '_playSoundBuffer16' buffer {
  for i ((size buffer) / 2) {
    local 's16' (((at (i * 2) buffer) << 8) | (at ((i * 2) - 1) buffer))
    atPut i buffer (((s16 + 32767) >> 8) & 255)
  }
  buffer = ('[data:copyFromTo]' buffer 1 ((size buffer) / 2))
  '_playSoundBuffer' buffer
}

to '_readChunkID' filename {
  return ('[data:join]' '' ('[file:readBytes]' 4 filename))
}

to '_readChunkSize' filename {
  local 'data' ('[file:readBytes]' 4 filename)
  return (((at 1 data) | ((at 2 data) << 8)) | (((at 3 data) << 16) | ((at 4 data) << 24)))
}

to playWAVFile filename {
  local 'pin' 25
  if ((boardType) == 'Citilab ED1') {
    pin = 26
  }
  '[file:open]' filename
  if (('_readChunkID' filename) == 'RIFF') {
    local 'size' ('_readChunkSize' filename)
    if (('_readChunkID' filename) == 'WAVE') {
      if (('_readChunkID' filename) == 'fmt ') {
        size = ('_readChunkSize' filename)
        local 'data' ('[file:readBytes]' size filename)
        local 'sampleRate' ((at 5 data) | ((at 6 data) << 8))
        local 'bps' ((at 15 data) | ((at 16 data) << 8))
        if (('_readChunkID' filename) == 'data') {
          size = ('_readChunkSize' filename)
          '[io:dacInit]' pin sampleRate
          data = ('[file:readBytes]' 800 filename)
          repeatUntil ((size data) == 0) {
            if (bps == 8) {
              '_playSoundBuffer' data
            } else {
              '_playSoundBuffer16' data
            }
            data = ('[file:readBytes]' 800 filename)
          }
        }
      }
    }
  }
  sayIt ('_readChunkID' filename)
  '[file:close]' filename
}

