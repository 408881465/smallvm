module Servo Output
variables _servoPin _servoPulseWidth _servoReversed _lastServoUpdate

	spec 'r' '_servoIndex' '_servoIndex _' 'str' 'A'
	spec ' ' 'attachServoToPin' 'attach servo _ to pin _ reversed _' 'menu.AtoDMenu auto bool' 'A' '1' false
	spec ' ' 'setServoAngle' 'set servo _ to _ degrees (-90 to 90)' 'menu.AtoDMenu auto' 'A' 90
	spec ' ' 'setServoSpeed' 'set servo _ to speed _ (-100 to 100)' 'menu.AtoDMenu auto' 'A' 50
	spec ' ' '_initServos2' '_initServos2'
	spec ' ' '_servoPulse' '_servoPulse pin _ usecs _' 'auto auto' 0 1500
	spec ' ' '_servoUpdateLoop' '_servoUpdateLoop'

to '_initServos2' {
  if (_servoPin == 0) {
    _servoPin = (newList 4)
    fillList _servoPin -1
    _servoPulseWidth = (newList 4)
    fillList _servoPulseWidth 1500
    _servoReversed = (newList 4)
    fillList _servoReversed (booleanConstant false)
  }
  sendBroadcastSimple '_servoUpdateLoop'
}

to '_servoIndex' which {
  if ('A' == which) {
    return 1
  } ('B' == which) {
    return 2
  } ('C' == which) {
    return 3
  } ('D' == which) {
    return 4
  }
  return 1
}

to '_servoPulse' pin usecs {
  if (usecs == 0) {
    comment 'Servo stopped; do nothing'
    return 0
  }
  usecs = (maximum 850 (minimum usecs 2150))
  comment 'Split wait into a long wait followed by a wait of <= 30 usecs for greater accuracy'
  local 'endTime' ((microsOp) + usecs)
  digitalWriteOp pin true
  waitMicros (usecs - 30)
  waitMicros (endTime - (microsOp))
  digitalWriteOp pin false
}

to '_servoUpdateLoop' {
  '_initServos2'
  forever {
    for i 4 {
      local 'pin' (at i _servoPin)
      local 'usecs' (at i _servoPulseWidth)
      if (and (pin >= 0) (usecs != 0)) {
        '_servoPulse' pin usecs
      }
    }
    waitMillis 15
  }
}

to attachServoToPin which pin reversed {
  '_initServos2'
  atPut ('_servoIndex' which) _servoPin pin
  atPut ('_servoIndex' which) _servoPulseWidth 1500
  atPut ('_servoIndex' which) _servoReversed reversed
}

to setServoAngle which degrees {
  '_initServos2'
  if (at ('_servoIndex' which) _servoReversed) {
    degrees = (0 - degrees)
  }
  local 'pulseWidth' (1500 - (7 * degrees))
  atPut ('_servoIndex' which) _servoPulseWidth pulseWidth
}

to setServoSpeed which speed {
  '_initServos2'
  if (at ('_servoIndex' which) _servoReversed) {
    speed = (0 - speed)
  }
  local 'pulseWidth' (1500 - (7 * speed))
  if ((absoluteValue speed) < 5) {
    pulseWidth = 0
  }
  atPut ('_servoIndex' which) _servoPulseWidth pulseWidth
}

