sharedVariables '_useWiFi'

spec ' ' 'wifi connect to' 'wifi connect to _ password _' 'str str' 'Network_Name' ''
spec 'r' 'getIPAddress' 'IP address'
spec ' ' 'defineThing' 'define thing _ capability _' 'str str.thingTypesMenu' 'Thing Name' ''
spec ' ' 'addProperty' 'add property named _ type _ @Type _' 'str menu.varTypesMenu str.propertyTypesMenu' 'onOff' 'boolean' 'BooleanProperty'
spec ' ' 'addLevel' 'add level property _ min _ max _' 'str num num' 'level' '0' '100'
spec ' ' '_endThing' '_end thing description'
spec ' ' '_reportChanged' '_reportChanged _ value _' 'menu.allVarsMenu auto' '' ''

to 'wifi connect to' ssid password {
  '[net:startWiFi]' ssid password
  repeatUntil ('Trying...' != ('[net:wifiStatus]')) {
    comment 'Slow blink while connecting'
    setUserLED true
    waitMillis 500
    setUserLED false
    waitMillis 500
  }
  if ('Connected' == ('[net:wifiStatus]')) {
    repeat 8 {
      comment 'Quick blinks when connected'
      setUserLED true
      waitMillis 50
      setUserLED false
      waitMillis 50
    }
    sayIt 'My IP address is:' ('[net:myIPAddress]')
  } else {
    comment 'Connection failure'
    setUserLED true
    sayIt ('[net:wifiStatus]')
  }
}

to getIPAddress {
  return ('[net:myIPAddress]')
}

to 'defineThing' name capability {
  _useWiFi = ('[net:hasWiFi]')
  if _useWiFi {
    '[net:clearThingDescription]'
    if ('' == capability) {
      '[net:appendToThingDescription]' '{ "name": "' name '",
  "@type": [ ],
  "properties": {'
    } else {
      '[net:appendToThingDescription]' '{ "name": "' name '",
  "@context": "https://iot.mozilla.org/schemas/",
  "@type": ["' capability '"],
  "properties": {'
    }
  } else {
    sendBroadcast 'moz-pair ' name
  }
}

to 'addProperty' var type typeName {
  if _useWiFi {
    '[net:appendToThingDescription]' '    "' var '": {"type": "' type '", "href": "/properties/' var '", "@type": "' typeName '"},'
  } else {
    if ('boolean' == type) {
      sendBroadcast 'moz-property {"name":"' var '","type":"boolean","value":false}'
    } ('number' == type) {
      sendBroadcast 'moz-property {"name":"' var '","type":"number","value":0,"min":0,"max":100}'
    } ('string' == type) {
      sendBroadcast 'moz-property {"name":"' var '","type":"string","value":""}'
    }
  }
}

to 'addLevel' var min max {
  if _useWiFi {
    '[net:appendToThingDescription]' '    "' var '": {"type": "number", "minimum": ' min ', "maximum": ' max ', "href": "/properties/' var '", "@type": "LevelProperty"},'
  } else {
    sendBroadcast 'moz-property {"name":"' var '","type":"number","value":0,"min":' min ',"max":' max '}'
  }
}

to '_endThing' {
  // Temporary, until MicroBlocks-adaptor is updated
  if (not _useWiFi) {
    sendBroadcast 'moz-done'
  }
}

to '_reportChanged' var value {
  // Temporary, until MicroBlocks-adaptor is updated
  sendBroadcast 'moz-property-changed {"name":"' var '","value":' value '}'
}
