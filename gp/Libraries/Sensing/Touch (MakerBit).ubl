module 'Touch (MakerBit)' Input
author MicroBlocks
version 1 0 
description 'Support for touch sensing for the MakerBit board by Roger Wagner. Based on the MPR21 touch sensor chip.'
variables _touch_initialized _touch_state _touch_last_state 

  spec 'r' 'touch_changed' 'touch changed?'
  spec 'r' 'touch_isTouched' 'is _ touched?' 'menu.range:5-16' 5
  spec 'r' 'touch_justTouched' 'was _ just touched?' 'menu.range:5-16' 5
  spec 'r' 'touch_justReleased' 'was _ just released?' 'menu.range:5-16' 5
  spec 'r' '_touch_bitForPin' '_bitForPin _' 'num' 10
  spec ' ' '_touch_update' '_touch_update'
  spec ' ' '_touch_init' '_touch_init'
  spec ' ' '_touch_setRegister' '_touch_setRegister _ to _' 'auto auto' 'hex register' 'hex value'

to '_touch_bitForPin' pin {
  if (or (pin < 5) (pin > 16)) {return 0}
  return (1 << (16 - pin))
}

to '_touch_init' {
  comment 'Soft reset -- sets all registers to defaults'
  '_touch_setRegister' '0x80' '0x63'
  comment 'Set filter parameters'
  '_touch_setRegister' '0x2B' '0x01'
  '_touch_setRegister' '0x2C' '0x01'
  '_touch_setRegister' '0x2D' '0x10'
  '_touch_setRegister' '0x2E' '0x20'
  '_touch_setRegister' '0x2F' '0x01'
  '_touch_setRegister' '0x30' '0x01'
  '_touch_setRegister' '0x31' '0x10'
  '_touch_setRegister' '0x32' '0x20'
  '_touch_setRegister' '0x33' '0x01'
  '_touch_setRegister' '0x34' '0x10'
  '_touch_setRegister' '0x35' '0xFF'
  comment 'Init debounce and config registers'
  '_touch_setRegister' '0x5B' '0x11'
  '_touch_setRegister' '0x5C' '0xFF'
  '_touch_setRegister' '0x5D' '0x30'
  comment 'Set touch/release thresholds'
  local 'touchThreshold' 40
  local 'releaseThreshold' 20
  for i 12 {
    local 'reg' ((hexToInt '40') + (2 * i))
    i2cSet 90 (reg - 1) touchThreshold
    i2cSet 90 reg releaseThreshold
  }
  comment 'Start tracking all 12 inputs (proximity detection disabled)'
  '_touch_setRegister' '0x5E' '0xCC'
  _touch_initialized = (booleanConstant true)
}

to '_touch_setRegister' reg value {
  i2cSet 90 (hexToInt reg) (hexToInt value)
}

to '_touch_update' {
  _touch_last_state = _touch_state
  _touch_state = (((i2cGet 90 1) << 8) | (i2cGet 90 0))
}

to touch_changed {
  if (not _touch_initialized) {'_touch_init'}
  '_touch_update'
  return (_touch_state != _touch_last_state)
}

to touch_isTouched pin {
  return ((_touch_state & ('_touch_bitForPin' pin)) != 0)
}

to touch_justReleased pin {
  local 'bit' ('_touch_bitForPin' pin)
  return (and ((_touch_last_state & bit) != 0) ((_touch_state & bit) == 0))
}

to touch_justTouched pin {
  local 'bit' ('_touch_bitForPin' pin)
  return (and ((_touch_last_state & bit) == 0) ((_touch_state & bit) != 0))
}

