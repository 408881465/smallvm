module 'Color (TCS34725)' Input
author 'José García Yeste'
version 1 3
tags sensor color 
description 'Support for the TCS34725 RGB color sensor.
'
variables '_TCS34725 initalized' 

	spec 'r' 'TCS34725 connected' 'TCS34725 connected'
	spec 'r' 'TCS34725 rgb' 'TCS34725 rgb'
	spec 'r' 'TCS34725 luminance' 'TCS34725 luminance'
	spec 'r' 'color' 'color _ name' 'color'
	spec ' ' '_TCS34725 setup' '_TCS34725 setup'
	spec 'r' '_TCS34725 raw' '_TCS34725 raw'

to 'TCS34725 connected' {
  return ((i2cGet (hexToInt '29') (hexToInt '92')) == (hexToInt '44'))
}

to 'TCS34725 luminance' {
  local 'crgb' ('_TCS34725 raw')
  local 'r' (at 2 crgb)
  local 'g' (at 3 crgb)
  local 'b' (at 4 crgb)
  comment '(-0.32466 * r) + (1.57837 * g) + (-0.73191 * b);'
  return (maximum 0 ((((r * -3246) + (g * 15784)) + (b * -7319)) / 10000))
}

to 'TCS34725 rgb' {
  local 'raw' ('_TCS34725 raw')
  local 'rgb' (newList 3)
  local 'c' (at 1 raw)
  if (c > 0) {
    for i 3 {
      atPut i rgb (((at (i + 1) raw) * 255) / c)
    }
    return (((at 1 rgb) << 16) | (((at 2 rgb) << 8) | (at 3 rgb)))
  } else {
    return 0
  }
}

to '_TCS34725 raw' {
  '_TCS34725 setup'
  comment 'read 8 bytes c,r,g,b'
  local 'crgb' (newList 8)
  if ('TCS34725 connected') {
    '[sensors:i2cWrite]' (hexToInt '29') (hexToInt '94')
    '[sensors:i2cRead]' (hexToInt '29') crgb
    waitMillis 1
    atPut 1 crgb (((at 2 crgb) << 8) | (at 1 crgb))
    atPut 2 crgb (((at 4 crgb) << 8) | (at 3 crgb))
    atPut 3 crgb (((at 6 crgb) << 8) | (at 5 crgb))
    atPut 4 crgb (((at 8 crgb) << 8) | (at 7 crgb))
  }
  return crgb
}

to '_TCS34725 setup' {
  if ((v '_TCS34725 initialized') == 0) {
    comment 'https://github.com/ControlEverythingCommunity/TCS34725/blob/master/C/TCS34725.c
// Select enable register(0x80)
// Power ON, crgbC enable, wait time disable(0x03)'
    i2cSet (hexToInt '29') (hexToInt '80') 3
    comment '// Select ALS time register(0x81)
// Atime = 700 ms(0x00)'
    i2cSet (hexToInt '29') (hexToInt '81') 0
    comment '// Select Wait Time register(0x83)
// WTIME : 0.154ms(0xC0)'
    i2cSet (hexToInt '29') (hexToInt '83') (hexToInt 'C0')
    comment '// Select control register(0x8F)
// AGAIN = 1x(0x00)'
    i2cSet (hexToInt '29') (hexToInt '8F') 0
    waitMillis 200
    '_TCS34725 initialized' = 1
  }
}

to color color {
  local 'r' ((color >> 16) & 255)
  local 'g' ((color >> 8) & 255)
  local 'b' (color & 255)
  if (and (r > (g + 30)) (r > (b + 30))) {
    return 'Red'
  }
  if (and (g > (b + 30)) (g > (r + 30))) {
    return 'Green'
  }
  if (and (b > (r + 30)) (b > (g + 30))) {
    return 'Blue'
  }
  if (and (r > (b + 15)) (g > (b + 15))) {
    return 'Yellow'
  }
  if (and (r > (g + 15)) (b > (g + 15))) {
    return 'Magenta'
  }
  if (and (g > (r + 15)) (b > (r + 15))) {
    return 'Cyan'
  }
  return ''
}

