module TCS34725
author 'José García Yeste'
version 1 0
description 'Support for the TCS34725 RGB color sensor.'
tags sensor color


	spec ' ' '_TCS34725 setup' '_TCS34725 setup'
	spec 'r' 'TCS34725 connected' 'TCS34725 connected'
	spec 'r' '_TCS34725 raw' '_TCS34725 raw'
	spec 'r' 'TCS34725 rgb' 'TCS34725 rgb'
	spec 'r' 'color' 'color _ name' 'color'
	spec 'r' '_makeColor' '_color r _ g _ b _ (0-31)' 'auto auto auto' 20 5 15

to 'TCS34725 connected' {
  return ((i2cGet (hexToInt '29') (hexToInt '92')) == (hexToInt '44'))
}

to '_TCS34725 raw' {
  comment 'read 8 bytes c,r,g,b'
  local 'crgb' (newList 32)
  if ((i2cGet (hexToInt '29') 0) >= 0) {
    '[sensors:i2cWrite]' (hexToInt '29') (hexToInt '94')
    atPut 1 crgb 8
    '[sensors:i2cRead]' (hexToInt '29') crgb
    waitMillis 10
    atPut 1 crgb (((at 2 crgb) << 8) | (at 1 crgb))
    atPut 2 crgb (((at 4 crgb) << 8) | (at 3 crgb))
    atPut 3 crgb (((at 6 crgb) << 8) | (at 5 crgb))
    atPut 4 crgb (((at 8 crgb) << 8) | (at 7 crgb))
  }
  return crgb
}

to 'TCS34725 rgb' {
  '_TCS34725 setup'
  local 'raw' ('_TCS34725 raw')
  local 'rgb' (newList 3)
  local 'c' (at 1 raw)
  if (c > 0) {
    for i 3 {
      atPut i rgb (((at (i + 1) raw) * 32) / c)
    }
    return (_makeColor (at 1 rgb) (at 2 rgb) (at 3 rgb))
  } else {
    return 0
  }
}

to '_TCS34725 setup' {
  comment 'https://github.com/ControlEverythingCommunity/TCS34725/blob/master/C/TCS34725.c
// Select enable register(0x80)
// Power ON, crgbC enable, wait time disable(0x03)'
  i2cSet (hexToInt '29') (hexToInt '80') 3
  comment '// Select ALS time register(0x81)
// Atime = 700 ms(0x00)'
  i2cSet (hexToInt '29') (hexToInt '81') 0
  comment '// Select Wait Time register(0x83)
// WTIME : 0.154ms(0xC0)'
  i2cSet (hexToInt '29') (hexToInt '83') (hexToInt 'C0')
  comment '// Select control register(0x8F)
// AGAIN = 1x(0x00)'
  i2cSet (hexToInt '29') (hexToInt '8F') 0
  waitMillis 200
}

to color color {
  local 'r' ((color >> 16) & 31)
  local 'g' ((color >> 8) & 31)
  local 'b' (color & 31)
  if (and (r > (g + 4)) (r > (b + 4))) {
    return 'Red'
  }
  if (and (g > (b + 4)) (g > (r + 4))) {
    return 'Green'
  }
  if (and (b > (r + 4)) (b > (g + 4))) {
    return 'Blue'
  }
  if (and (r > (b + 2)) (g > (b + 2))) {
    return 'Yellow'
  }
  if (and (r > (g + 2)) (b > (g + 2))) {
    return 'Magenta'
  }
  if (and (g > (r + 2)) (b > (r + 2))) {
    return 'Cyan'
  }
  return ''
}

to _makeColor r g b {
  return ((r << 16) | ((g << 8) | b))
}
