module MakerBit Output
author MicroBlocks
version 1 5
depends 'Touch (MPR121)'
choices makerbit_motor A B
choices makerbit_pin_touched '5' '6' '7' '8' '9' '10' '11' '12' '13' '14' '15' any
description 'Support for MakerBit (https://makerbit.com)'
variables _pinOutputValues

  spec 'r' 'makerbit_pinTouched' 'is MakerBit pin _ touched?' 'menu.makerbit_pin_touched' 5
  space
  spec 'r' 'makerbit_touchEvent' 'touch event'
  spec 'r' 'makerbit_last_touched_pin' 'last touched pin'
  space
  spec ' ' 'makerbit_setDigitalPin' 'set MakerBit pin _ to _' 'menu.range:5-16 bool' 5 true
  spec ' ' 'makerbit_setAllPins' 'set all MakerBit LEDs _' 'bool' false
  spec 'r' 'makerbit_allPins' 'MakerBit pins'
  space
  spec ' ' 'makerbit_setMotorMakerBit' 'set motor _ power _' 'menu.makerbit_motor num' 'A' 100
  spec ' ' 'makerbit_stopMotors' 'stop all motors'
  space
  spec ' ' '[display:mbEnableDisplay]' 'enable microbit LED display _' 'bool' false

to makerbit_allPins {
  return ('[data:range]' 5 16)
}

to makerbit_last_touched_pin {
  return ((touch_last_touched_pin) + 5)
}

to makerbit_pinTouched pin {
  if ('any' == pin) {return (touch_any_pin_touched)}
  return (touch_isTouched (pin - 5))
}

to makerbit_setAllPins bool {
  for pin (makerbit_allPins) {
    makerbit_setDigitalPin pin bool
  }
}

to makerbit_setDigitalPin pin bool {
  if (_pinOutputValues == 0) {_pinOutputValues = (newList 32 '')}
  digitalWriteOp pin bool
  if (or (pin == 13) (pin == 14)) {
    if bool {
      analogWriteOp pin 1023
    } else {
      analogWriteOp pin 0
    }
  }
  atPut (pin + 1) _pinOutputValues bool
}

to makerbit_setMotorMakerBit motor power {
  comment 'Set motor (A or B) power (-100 to 100). The sign
of the power value determines motor direction.'
  comment 'Motor A: 11 & 12 (direction), 13 (power)
Motor B: 15 & 16 (direction), 14 (power)'
  if (motor == 'A') {
    local 'p1' 11
    local 'p2' 12
    local 'pwrPin' 13
  } (motor == 'B') {
    local 'p1' 15
    local 'p2' 16
    local 'pwrPin' 14
  } else {
    return 0
  }
  comment 'Set the motor direction based on sign of power'
  if (power > 0) {
    makerbit_setDigitalPin p1 false
    makerbit_setDigitalPin p2 true
  } (power < 0) {
    makerbit_setDigitalPin p1 true
    makerbit_setDigitalPin p2 false
  } else {
    makerbit_setDigitalPin p1 false
    makerbit_setDigitalPin p2 false
  }
  comment 'Set the PWM duty cycle on the power pin'
  atPut (pwrPin + 1) _pinOutputValues (power != 0)
  analogWriteOp pwrPin (minimum (((absoluteValue power) * 1023) / 100) 1023)
}

to makerbit_stopMotors {
  makerbit_setMotorMakerBit 'A' 0
  makerbit_setMotorMakerBit 'B' 0
}

to makerbit_touchEvent {
  return (touch_touch_event)
}

